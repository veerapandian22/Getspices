#========================Docker===========================================================#
hub: dckr_pat_C4ui5Rj9hvEF6CmDJi1ObyMec1M
docker login -u veerapandian22

docker build -t vaa_spices_services:1.0 .
docker run -p 8888:80 vaa_spices_services:1.0 (browser - localhost:8888)
docker image ls / docker images -a
docker system prune / docker image prune -a (for removing dangling and ununsed images).
docker rmi vaa_spices_services:1.0

#========================gcloud===========================================================#
Install the gcloud CLI (https://cloud.google.com/sdk/docs/install)
gcloud auth login (https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=en)
docker tag vaa_spices_services:1.0 gcr.io/vaa-spices/vaa_spices_services:1.0 (tag image)
docker push gcr.io/vaa-spices/vaa_spices_services:1.0 (push image to registry)

#========================Jenkins===========================================================#
[N1 is required not E2: Ubuntu 22.04LTS]
sudo apt update -y
sudo apt upgrade -y
sudo apt install openjdk-17-jdk
https://www.jenkins.io/doc/book/installing/linux/#debianubuntu
sudo systemctl start jenkins
sudo systemctl status jenkins
sudo ufw allow 8080
sudo ufw allow OpenSSH
sudo ufw enable
sudo ufw status
[in URL use http not https]
Jenkins URL: http://35.193.242.37:8080/
docker run -d --name sonar -p 9000:9000 sonarqube:lts-community
Sonarqube: http://35.193.242.37:9000/
https://github.com/jenkinsci/ghprb-plugin

#========================Kubernetes Clusters===========================================================#
gcloud config set project vaa-spices
gcloud container clusters get-credentials vaa-cluster --region us-central1 --project vaa-spices
kubectl create deployment hello-world-rest-api --image=in28min/hello-world-rest-api:0.0.1.RELEASE 
kubectl get deployment
kubectl expose deployment hello-world-rest-api --type=LoadBalancer --port=8080
kubectl get services 
curl http://34.171.170.96:8080
curl http://34.171.170.96:8080/hello-world
kubectl scale deployment hello-world-rest-api --replicas=3
kubectl get deployment
watch curl http://34.171.170.96:8080/hello-world
kubectl get deployment
kubectl get pods
gcloud container clusters resize <vaa-cluster>--node-pool default-pool --num-nodes=2 --zone=us-central1-a

---Auto Scaking---
kubectl autoscale deployment <hello-world-rest-api> --max=4 --cpu-percent=70 (for microservice - upto nodes/pool)
kubectl get hpa
gcloud container clusters update <vaa-cluster> --enable-autoscaling --min-nodes=1 --max-nodes=10 (for clusters)
kubectl create configmap <hello-world-config> --from-literal=RDS_DB_NAME=todos
kubectl get configmap
kubectl get configmap <hello-world-config>
kubectl describe configmap <hello-world-config>
kubectl create secret generic <hello-world-config> --from-literal=RDS_PASSWORD=dummytodos
kubectl get secret
kubectl describe secret <hello-world-config>

kubectl apply -f deployment.yaml

#========================Header CORS===========================================================#
https://stackoverflow.com/questions/62875723/how-to-send-an-access-control-allow-origin-header-using-django-3
