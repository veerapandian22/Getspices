-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS gs_inventory.billing_address
(
    id integer NOT NULL DEFAULT nextval('gs_inventory.billing_address_id_seq'::regclass),
    user_id integer NOT NULL,
    user_name character varying COLLATE pg_catalog."default",
    user_mail character varying COLLATE pg_catalog."default",
    ph_no integer,
    address character varying COLLATE pg_catalog."default",
    state character varying COLLATE pg_catalog."default",
    district character varying COLLATE pg_catalog."default",
    pincode integer,
    message character varying COLLATE pg_catalog."default",
    create_date timestamp without time zone,
    update_date timestamp without time zone,
    CONSTRAINT billing_address_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS gs_inventory."user"
(
    id integer NOT NULL DEFAULT nextval('gs_inventory.user_id_seq'::regclass),
    name character varying COLLATE pg_catalog."default",
    mail character varying COLLATE pg_catalog."default",
    ph_no integer,
    password character varying COLLATE pg_catalog."default",
    is_admin integer,
    otp_code integer,
    otp_validity timestamp without time zone,
    create_date timestamp without time zone,
    update_date timestamp without time zone,
    CONSTRAINT user_pkey PRIMARY KEY (id),
    CONSTRAINT user_mail_key UNIQUE (mail),
    CONSTRAINT user_ph_no_key UNIQUE (ph_no)
);

CREATE TABLE IF NOT EXISTS gs_inventory.cart
(
    id integer NOT NULL DEFAULT nextval('gs_inventory.cart_id_seq'::regclass),
    user_id integer NOT NULL,
    product_id integer NOT NULL,
    product_item_id integer NOT NULL,
    create_date timestamp without time zone,
    update_date timestamp without time zone,
    CONSTRAINT cart_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS gs_inventory.product
(
    id integer NOT NULL DEFAULT nextval('gs_inventory.product_id_seq'::regclass),
    hsn_code character varying COLLATE pg_catalog."default",
    product_code character varying COLLATE pg_catalog."default",
    product_name character varying COLLATE pg_catalog."default",
    product_img_path character varying COLLATE pg_catalog."default",
    product_desc character varying COLLATE pg_catalog."default",
    product_price integer,
    stack_qty integer,
    available_qty integer,
    manufacturer_from character varying COLLATE pg_catalog."default",
    create_date timestamp without time zone,
    update_date timestamp without time zone,
    CONSTRAINT product_pkey PRIMARY KEY (id),
    CONSTRAINT product_hsn_code_key UNIQUE (hsn_code),
    CONSTRAINT product_product_code_key UNIQUE (product_code)
);

CREATE TABLE IF NOT EXISTS gs_inventory.product_item
(
    id integer NOT NULL DEFAULT nextval('gs_inventory.product_item_id_seq'::regclass),
    product_id integer NOT NULL,
    item_code character varying COLLATE pg_catalog."default",
    item_name character varying COLLATE pg_catalog."default",
    item_grade character varying COLLATE pg_catalog."default",
    item_img_path character varying COLLATE pg_catalog."default",
    item_desc character varying COLLATE pg_catalog."default",
    item_price integer,
    stack_qty integer,
    available_qty integer,
    create_date timestamp without time zone,
    update_date timestamp without time zone,
    CONSTRAINT product_item_pkey PRIMARY KEY (id),
    CONSTRAINT product_item_item_code_key UNIQUE (item_code),
    CONSTRAINT product_item_item_grade_key UNIQUE (item_grade)
);

CREATE TABLE IF NOT EXISTS gs_inventory."order"
(
    id integer NOT NULL DEFAULT nextval('gs_inventory.order_id_seq'::regclass),
    user_id integer NOT NULL,
    product_id integer NOT NULL,
    product_item_id integer NOT NULL,
    billing_address_id integer NOT NULL,
    create_date timestamp without time zone,
    update_date timestamp without time zone,
    CONSTRAINT order_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS gs_inventory.billing_address
    ADD CONSTRAINT billing_address_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES gs_inventory."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS gs_inventory.cart
    ADD CONSTRAINT cart_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES gs_inventory.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS gs_inventory.cart
    ADD CONSTRAINT cart_product_item_id_fkey FOREIGN KEY (product_item_id)
    REFERENCES gs_inventory.product_item (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS gs_inventory.cart
    ADD CONSTRAINT cart_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES gs_inventory."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS gs_inventory.product_item
    ADD CONSTRAINT product_item_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES gs_inventory.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS gs_inventory."order"
    ADD CONSTRAINT order_billing_address_id_fkey FOREIGN KEY (billing_address_id)
    REFERENCES gs_inventory.billing_address (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS gs_inventory."order"
    ADD CONSTRAINT order_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES gs_inventory.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS gs_inventory."order"
    ADD CONSTRAINT order_product_item_id_fkey FOREIGN KEY (product_item_id)
    REFERENCES gs_inventory.product_item (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS gs_inventory."order"
    ADD CONSTRAINT order_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES gs_inventory."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;